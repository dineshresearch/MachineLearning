1. Linear Regression

You are required to train the linear regression on a train file. 
You will be given a large number of initial attributes and you will require to create your own features 
and select some partial number of features from it. 

Example: 

Suppose you are given an initial attribute vector of size n say x1, x2, ..., xn
The features creation will be as x1, x12, x1x2, x1xn/x2x3 and other such combinations. 
You will be required to select only a few features and try to achieve a greater accuracy on the unknown test datasets. 

You can test various set of features by training on training file and testing on the test file which is given to you. 
Note that we will be grading you based on your performance on an evaluation file which is not provided to you and 
not on testing file and the metric which will be used for grading will be Minimum Squared Error.

You are required to create 2 source files one with the name train_linear and other with the name test_linear.

train will take two input arguments trainfile and modelfile.
trainfile is the input training file in the csv format and the 
modelfile is the output model file which you will produce 
according to the number of features that you have selected. 

test will take 3 arguments testfile, modelfile and labelfile. 
testfile is the test file on which the test will take place and the 
modelfile is the one that is generated by you in the above part and 
you will be outputting the labels in the label file.

Input:

All the files will be in the csv format. 

The train file will contain a matrix of size m x (n+1) where the initial n columns correspond to the given attribute values and the last column will correspond to the target/label values.

The test file will contain a matrix of size k x n (not k x (n+1)). The columns correspond to the attribute values. You will be also given a label file corresponding to the test file provided for testing purposes.

Output:

You will be required to output the target vector corresponding to the test file of size k x 1. Each output value should be present in a new line.


2. Logistic Regression 

In this problem, you will be given a multiclass classification problem with both numerical and categorical input attributes. Again, you will be required to create some features and select a subset from them to train the logistic regression model. 

You will output the class which gives the maximum probability according to the model specified by you. 

You will be graded on basis of the accuracy with the actual labels. You can experiment various set of features by training on train and testing on the test file given to you.

The instructions are the same as Linear Regression. You are required to create 2 source files one with the name train_logistic and other with the name test_logistic.

train will take two input arguments trainfile and modelfile. trainfile is the input training file in the csv format and the modelfile is the output model file which you will produce according to the number of features that you have selected. 

test will take 3 arguments testfile, modelfile and labelfile. testfile is the test file on which the test will take place and the modelfile is the one that is generated by you in the above part and you will be outputting the labels in the label file.

Input:

All the files will be in the csv format. 

The train file will contain a matrix of size m x (n+1) where the initial n columns correspond to the given attribute values and the last column will correspond to the target/label values.

The test file will contain a matrix of size k x n (not k x (n+1)). The columns correspond to the attribute values. You will be also given a label file corresponding to the test file provided for testing purposes.

Output:

You will be required to output the target vector corresponding to the test file of size k x 1. Each output value should be present in a new line.

General Instructions:

The marking for this assignment will be based on 2 primary objectives: Correctness and Performance. Correctness will carry 70% of the weightage and performance will carry 30% of the weightage. 

Correctness include correct input-output format and giving performance better than or same as the models using default features provided by attributes.

Performance marks will be based on your relative performance with the rest of the students.

Note that you can train your models on both train and test files given to you while submitting. 

You are strictly advised to follow the input and output instructions. Not following them will result in high penalty.

