Formal system
In formal logic, a formal system (also called a logical system,[1] a logistic system,[1] a logical calculus,[2] or simply a logic[1]) consists of a formal language together with a deductive system (also called a deductive apparatus) which consists of a set of inference rules and/or axioms. A formal system is used to derive one expression from one or more other expressions antecedently expressed in the system. These expressions are called axioms, in the case of those previously supposed to be true, or theorems, in the case of those derived. A formal system may be formulated and studied for its intrinsic properties, or it may be intended as a description (i.e. a model) of external phenomena.

Each formal system has a formal language, which is composed by primitive symbols. These symbols act on certain rules of formation and are developed by inference from a set of axioms. The system thus consists of any number of formulas built up through finite combinations of the primitive symbols—combinations that are formed from the axioms in accordance with the stated rules. [3]
Formal systems in mathematics consist of the following elements:
A formal system is said to be recursive (i.e. effective) if the set of axioms and the set of inference rules are decidable sets or semidecidable sets, according to context.
Some theorists use the term formalism as a rough synonym for formal system, but the term is also used to refer to a particular style of notation, for example, Paul Dirac's bra-ket notation.


A formal language is a set A of strings (finite sequences) on a fixed alphabet α.

In computer science and linguistics a formal grammar is a precise description of a formal language: a set of strings. The two main categories of formal grammar are that of generative grammars, which are sets of rules for how strings in a language can be generated, and that of analytic grammars, which are sets of rules for how a string can be analyzed to determine whether it is a member of the language. In short, an analytic grammar describes how to recognize when strings are members in the set, whereas a generative grammar describes how to write only those strings in the set.

Formal proofs are sequences of strings. For a string to qualify as part of a proof, it might either be an axiom or be the product of applying an inference rule on previous strings in the proof sequence. The last string in the sequence is recognized as a theorem.
The point of view that generating formal proofs is all there is to mathematics is often called formalism. David Hilbert founded metamathematics as a discipline for discussing formal systems. Any language that one uses to talk about a formal system is called a metalanguage. The metalanguage may be nothing more than ordinary natural language, or it may be partially formalized itself, but it is generally less completely formalized than the formal language component of the formal system under examination, which is then called the object language, that is, the object of the discussion in question.
Once a formal system is given, one can define the set of theorems which can be proved inside the formal system. This set consists of all strings for which there is a proof. Thus all axioms are considered theorems. Unlike the grammar for strings, there is no guarantee that there will be a decision procedure for deciding whether a given string is a theorem or not. The notion of theorem just defined should not be confused with theorems about the formal system, which, in order to avoid confusion, are usually called metatheorems.

A formal interpretation of a formal system is the assignment of meanings, to the symbols, and truth-values to the sentences of the formal system. The study of formal interpretations is called Formal semantics. Giving an interpretation is synonymous with constructing a model.
An interpreted formal system is a formal language for which both syntactical rules for deduction, and semantical rules of interpretation are given. An interpreted formal system can be expressed as the ordered quadruple <α,,d,>. Where, in the case of extensional metalanguages,  is the relation of value assignment for the sentences of the language and in the case of intensional metalanguages, it is relation of designation, i.e., the relation between an expression and its intension; and where d is the relation of direct derivability. This relation is understood in a comprehensive sense such that the primitive sentences of the formal system are taken as directly derivable from the empty set of sentences. Here axioms are stated, some similar to those stated for a formal system, and some like those for an interpreted formal language. Usually, we wish for d to be truth-preserving (that is, any sentence which is directly derivable from true sentences is itself true), however other modalities can also preserved in such a system. We can formulate an axiom for these purposes with use of the term "true". For any i1,...,in, j, p1,...,pn,q if d(j,{i1,...,in}), (i1,p1) and ... and (in,pn) and p1 and ... and pn, q.
For interpreted formal systems there are also alternative, more explicit definitions which include ds, or both ds and D, analogous to those given for interpreted formal languages.




