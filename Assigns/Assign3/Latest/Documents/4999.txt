BitLocker Drive Encryption
BitLocker Drive Encryption is a full disk encryption feature included with Microsoft's Windows Vista Ultimate, Windows Vista Enterprise, Windows Server 2008 and Windows 7 Ultimate Beta operating systems designed to protect data by providing encryption for entire volumes. By default it uses the AES encryption algorithm in CBC mode with a 128 bit key, combined with the Elephant diffuser for additional disk encryption specific security not provided by AES.[1][2]
BitLocker is available only in the Enterprise and Ultimate editions of Windows Vista.[1] In the RTM release of Windows Vista, only the operating system volume could be encrypted using the GUI and encrypting other volumes required using WMI-based scripts included in Windows Vista in the %Windir%\System32 folder. [3] An example of how to use the WMI interface is in the script manage-bde.wsf, that can be used to set up and manage BitLocker from the command line. With Windows Vista Service Pack 1 and Windows Server 2008, volumes other than the operating system volume can be BitLocker-protected using the graphical Control Panel applet as well. [4]

There are three implementation models for BitLocker encryption.[5] Two models require a cryptographic hardware chip called a Trusted Platform Module (version 1.2 or later) and a compatible BIOS. A third model does not have the TPM chip requirement:
The third model, without the TPM chip requirement:
The following permutations of the above are supported, all with an optional escrow key[6] in Active Directory:

Contrary to the official name, BitLocker Drive Encryption is a logical volume encryption system. A volume may or may not be an entire drive, and can span one or more physical drives. Also, when enabled TPM/Bitlocker can ensure the integrity of the trusted boot path (e.g. BIOS, boot sector, etc.), in order to prevent most offline physical attacks, boot sector malware, etc.
In order for BitLocker to operate, the hard disk requires at least two NTFS-formatted volumes: one for the operating system (usually C:) and another with a minimum size of 1.5GB where the operating system boots from. BitLocker requires the boot volume to remain unencrypted, so it should not be used to store confidential information. Unlike previous versions of Windows, Vista's "diskpart" command-line tool includes the ability to shrink the size of an NTFS volume so that the system volume for BitLocker can be created. A tool called the "Bitlocker Drive Preparation Tool" is also available from Microsoft that allows an existing volume to be shrunk to make room for a new boot volume, and for the necessary bootstrapping files to be transferred to it.[12]
Once an alternate boot partition has been created, the TPM module needs to be initialized (assuming that this feature is being used), after which the required disk encryption key protection mechanisms such as TPM, PIN or USB key are configured. The volume is then encrypted as a background task, something that can take a considerable amount of time with a large disk. Only once the whole volume has been encrypted are the keys protected, and the volume considered secure.
Encrypting File System may be used in conjunction with BitLocker to provide protection once the operating system kernel has been loaded. Since BitLocker decrypts on-disk files before the Windows operating system has loaded (and thus outside of the operating system context), all file operations from the perspective of the operating system will proceed as if there is no encryption on the files being accessed by the operating system. Protection of the files from processes/users within the operating system can only be performed using encryption software that operates within Windows, such as Encrypting File System. BitLocker and Encrypting File System therefore offer protection against different classes of attacks.[13]
In Active Directory environments, BitLocker supports optional key escrow to Active Directory, although a schema update may be required for this to work (i.e. if the Active Directory Directory Services are hosted on a Windows version previous to Windows Server 2008).
Other systems like BitLocker can have their recovery key/password entry process spoofed by another bootmanager or OS install. Once the spoofed software captured the secret, it could be used to decrypt the VMK, which would then allow access to decrypt or modify any information on the user's BitLocker-encrypted hard disk. By configuring a TPM to protect the trusted boot pathway, including the BIOS and boot sector, this threat can be removed.

According to Microsoft sources,[14][15] BitLocker does not contain an intentionally built-in backdoor; there is no way for law enforcement to have a guaranteed passage to the data on the user's drives that is provided by Microsoft. The possible existence of a backdoor has been one of the main concerns among power-users since the announcement of built-in encryption in Vista. Although the AES encryption algorithm used in Bitlocker is in the public domain, its actual implementation in BitLocker, as well as other components of the software, are closed source. The code is available for scrutiny by selected Microsoft partners and enterprises, subject to a non-disclosure agreement.
The "Transparent operation mode" and "User authentication mode" of BitLocker use the TPM hardware to detect if there are unauthorized changes to the pre-boot environment, including the BIOS and MBR.[16] If any unauthorized changes are detected, BitLocker requests a recovery key on a USB device, or a recovery password entered by hand. Either of these cryptographic secrets are used to decrypt the Volume Master Key (VMK) and allow the bootup process to continue.[16]
Nevertheless, in February 2008, a group of security researchers published details of a straightforward cold boot attack that allows a Bitlocker-protected machine to be compromised by booting the machine off a USB device into another operating system, then dumping the contents of pre-boot memory.[17] The attack relies on the fact that DRAM retains information for up to several minutes (or even longer if cooled) after power has been removed. Use of a TPM module alone does not offer any protection, as the keys are held in memory while Windows is running, although two-factor authentication, i.e. using TPM together with a PIN, offers better protection for machines that are not powered on when physical access to them is obtained. Similar full disk encryption mechanisms of other vendors and other operating systems, including Linux and Mac OS X, are vulnerable to the same attack.[17] The authors recommend that computers be powered down when not in physical control of the owner (rather than be left in a "sleep" state) and that a password also be required to boot the machine.
BitLocker can also operate in a "USB Key"-only mode. The security risk in this case is that the key is left with the computer, or that a malicious program (either pre-boot or post-boot Windows malware) could read the startup key off of the USB Key and store it. It could be used later to decrypt and access the BitLocker-secured hard disk. This risk can be reduced by removing the USB Key from the USB port before Vista completely starts up. This should prevent post-boot malware from capturing the key, or the key being stolen together with the computer.[original research?]
Lastly, all software-based encryption systems are vulnerable to various side channel attacks such as acoustic cryptanalysis and hardware keyloggers.


