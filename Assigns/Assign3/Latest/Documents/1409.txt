Fractal art
Fractal art is created by calculating fractal objects and representing the calculation results as still images, animations, music, or other media. Fractal art is usually created indirectly with the assistance of fractal generating software, iterating through three phases: setting parameters of appropriate fractal software, executing the possibly lengthy calculation and evaluating the product. In some cases, other graphics programs, such as Photoshop, are used to further modify the images produced. This is called post-processing.

Fractal objects in fractal art fall into four main categories depending on how an artist can manipulate their construction and rendering to exercise artistic control over the resulting fractal art:

Escape time fractals are defined by a recurrence relation at each point in a space (such as the complex plane). These fractals are manipulated with the choice of the formula to be iterated and its parameters, the choice of what points are iterated (usually a tiny region of the complex plane containing interesting shapes) and how they are mapped to an image, and the choice of how to compute a colour from the numbers produced by the calculations. All these components have an explicitly mathematical and nonvisual nature and they can often be very complex. Examples of this type of fractal are the Mandelbrot and Julia sets, the Lyapunov fractal, the Newton fractal, its relative, the Nova fractal, and the Burning Ship fractal. Some fractal image creation programs for this type of fractal art are Fractint, Sterling, Ultra Fractal, XaoS, ChaosPro, and Gnofract4D.
Since few people can predict the shape of a fractal created by a particular formula (except for the famous Mandelbrot Set and perhaps a few others), this kind of fractal art has a pseudo-random element: the artist selects a formula and is presented with an image, which can then be altered in various ways. The initial image acts as a seed to the process of creating fractal images. The process is analogous to starting with a photograph and then applying various effects to it using a graphics program. The most common method of changing the fractal image is zooming into it, especially into a part that looks interesting or promising.

Examples of this type include the Peano curve, the Hilbert curve, the Sierpinski gasket, the Menger sponge, and the Koch snowflake. Stochastic systems, where the replaced shapes and/or the choice of rules are random are very popular, especially to make simulations of trees and other natural objects.
Design relies on simple geometry (angles and lengths) and being able to predict the shapes resulting from a rule system. The possibility of fast or realtime previews of the result greatly facilitates small adjustements of sizes, angles and probabilities.

Iterated function systems and variants thereof have a fixed geometric replacement rule. An example is the fractal flame. Shapes and colours are determined by easily understood transformations of shrunk copies of the whole pattern, and since the transformation matrices and deformations have no particular significance, they are usually input in fractal software visually and often with a realtime preview. Another trend is manual editing, starting from a random fractal (the arbitrary parameters are many and mostly independent). Apophysis is a popular and very sophisticated example of this category.

Stochastic synthesis of fractal noise (typically fractal landscapes) is controlled through a few simple high level parameters and by trying different pseudorandom number generator seeds.

Many fractal artists generate animations of fractal images rather than single still images. Fractal animations can be divided into two broad types: zooms and parameter interpolations. Some fractal animations use a combination of both techniques.
Zooms and "deep zooms" are animations that zoom into a portion of a fractal, magnifying it as the animation progresses. (Some zooms are actually zoom-outs, which start from a high magnification and zoom out to a lower magnification.) Typically, deep zoom animations will magnify the fractal by a factor of 10 to the 50th power or more. A few animations render the fractal frame-by-frame up to a magnification factor of 10 to the 80th - 120th power. Some animations magnify beyond this using techniques to interpolate between a small number of key frames.
Parameter interpolations (also called parameter iterations or rolls) change some parameter of the fractal as the animation progresses. For example, changing the starting value of Z in the Mandelbrot set function Z = Z2 + C (normally Z=0 is used as the initial value) will yield a shape that changes with time. Another example would be changing the exponent of the function, using Z = Za + C, and varying a over time.
Some fractal artists focus primarily on animations, which are far more demanding computationally than still images. A typical fractal animation lasts 1-5 minutes (some are longer), which means that thousands of individual frames must be generated to make a standard 24 frame/s or 30 frame/s video. Some well-known animations took months of computer time to render [1]. Deep-zoom animations in particular are extraordinarily demanding on computing time because they require the use of specialized software high-precision mathematical routines to progress beyond the limit of most personal computer math hardware, which limits zooming magnifications to about 10E15.[2]
Due to the extreme computational requirements of producing fractal animations, many of them are generated using techniques that are optimized to render an image with high-speed, rather than with maximum fidelity to the "pure" fractal image. There is a wide variety of "guessing" algorithms used in fractal image generating software [3] that are intended to render images as quickly as possible in order to make generating animations practical. In addition, software designed to render deep-zoom fractal animations must use specialized software arithmetic techniques generally known as bignum arithmetic in order to work with precision far beyond what is generally available in computer hardware.[4]. These techniques are an interesting branch of computer science in their own right, independent of fractal animations, and are similar to the techniques used to find large prime numbers and large lists of the digits of pi. Many other optimizations[5] are used in most well-known fractal rendering software.
Generally, complex layering techniques are used less often in fractal animations than in still image fractal art, although some multi-layer fractal animations do exist. Some types of fractals (for example, iterated function systems) do not lend themselves well to deep zooms, since they populate a wide area very sparsely and would require impractically vast computer resources even for a modest zoom.

Fractals of all four kinds have been used as the basis for digital art and animation. Starting with 2-dimensional details of fractals, such as the Mandelbrot Set, fractals have found artistic application in fields as varied as texture generation, plant growth simulation and landscape generation.
Fractals are sometimes combined with human-assisted evolutionary algorithms, either by iteratively choosing good-looking specimens in a set of random variations of a fractal artwork and producing new variations, to avoid dealing with cumbersome or unpredictable parameters, or collectively, like in the Electric Sheep project, where people use fractal flames rendered with distributed computing as their screensaver and "rate" the flame they are viewing, influencing the server, which reduces the traits of the undesirables, and increases those of the desirables to produce a computer-generated, community-created piece of art.




